class void {}
class Double {}
class Boolean {}

interface IInteger {}
class Byte implements IInteger {}
class Integer implements IInteger {}
class Long implements IInteger {}
class Unsigned implements IInteger {}
class UnsignedLong implements IInteger {}

class String {}

class Pointer<T> {}

class Array<T> {
    Pointer<T> _elements;
    Long length;

    T get(Long index) {
        return _elements.deref(index);
    }
}

class File {
    Integer _fd;

    File(Integer fd) { _fd = fd; }

    static File open(String pathname, Integer flags) {}
    Integer close() {}
    Long lseek(Integer offset, Integer whence) {}
    UnsignedLong read(Array<Byte> buf, UnsignedLong count) {}
    UnsignedLong write(Array<Byte> buf, UnsignedLong count) {}
}
